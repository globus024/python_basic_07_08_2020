# Azamat Khankhodjaev
# 04.10.2020
# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь
# сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и
# вносить его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести
# текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class NotNumberException(Exception):
    def __init__(self, txt):
        self.txt = txt


if __name__ == '__main__':
    print('Выход из программы: stop')
    res = []
    while True:
        number_input = input(f'Введите числа через пробел\n')
        if number_input == "stop":
            break

        input_list = number_input.split()
        for number in input_list:
            try:
                if not number.isdigit():
                    raise NotNumberException(f'{number} - не число')
                res.append(int(number))
            except NotNumberException as ex:
                print(ex)

    print(res)